@startuml
state s1 <<start>>
state s2 <<start>>
state e1 <<end>>
state e2 <<end>>
state e3 <<end>>
结算单启动: 按周期生产
结算单启动: 关键点：清算周期（开始/结束）时间
结算单启动: 关键点：结算开始时间

s1 -> 交易完成
s2 -> 结算单启动

state 清算 {
	binlog -> 清算流水
	清算流水 -> 清算_净额_and_手续费
	清算_净额_and_手续费 -> 交易汇总
	交易汇总 -> 净额汇总
	净额汇总 -> 手续费汇总
}

state 结算 {
	结算单_汇总详情单 --> 汇总
	结算单_汇总详情单: 按最小计量周期生成结算单
	结算单_汇总详情单: 目前是天，可以扩展到小时
	state 汇总 {
		已处理净额检查 -> 未处理净额处理
		已处理净额检查: 目前只有实时结算存在
		已处理净额检查: 已结算余额（实时_逐笔动账）
		未处理净额处理: 周期结算：待结算 to 商户余额
		未处理净额处理: 实时结算时为0
		未处理净额处理 --> 已处理手续费检查
		已处理手续费检查: 情况1：已经从结算额扣除
		已处理手续费检查: 情况2：已经从外部账户扣除
		已处理手续费检查 -l> 未处理手续费处理
		未处理手续费处理: 只进行累计，还未进行动账
		未处理手续费处理: 周期结算：待结算 to 手续费收入
	}
	汇总 --> 税费处置
	税费处置: 根据手续费计税
	税费处置 --> 网关费处理
	state 逐笔动账 {
		state 所有结算 {
			净额记账 -d-> 手续费记账
			净额记账: 待清算 to 待结算
			手续费记账: 无需记账，只需汇总
		}
		state 实时结算 {
			实时结算_净额记账 --> 实时结算_手续费记账
			实时结算_净额记账: 待清算 to 现金户
			实时结算_手续费记账: 待结算 to 手续费收入户
		}
	}
	逐笔动账 -> 逐笔结束
}

交易完成 -> binlog
结算单启动 -> 结算单_汇总详情单

交易汇总 --> 结算单_汇总详情单
净额汇总 --> 结算单_汇总详情单
手续费汇总 --> 结算单_汇总详情单

手续费汇总 -> 清算完成
清算完成 -> 逐笔动账
网关费处理 --> 结算完成

清算完成 -> e1
结算完成 --> e2
逐笔结束 -> e3
@enduml